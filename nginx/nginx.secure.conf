# MEV Shield Secure Nginx Configuration
# Phase 2 Security Hardening - Production Ready
# Implements OWASP security guidelines and defense-in-depth

# User and worker process configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker connections and security settings
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    worker_rlimit_nofile 4096;
}

http {
    # Basic Configuration
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security: Hide nginx version
    server_tokens off;
    
    # Security: Buffer overflow protection
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    client_max_body_size 5m;
    large_client_header_buffers 4 16k;
    
    # Timeout configurations (DoS protection)
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    
    # Security headers configuration
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), bluetooth=()" always;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:; frame-src 'none'; object-src 'none'; base-uri 'self'; form-action 'self'" always;
    
    # Feature Policy / Permissions Policy
    add_header Feature-Policy "geolocation 'none'; microphone 'none'; camera 'none'; payment 'none'; usb 'none'; bluetooth 'none'" always;
    
    # Security: Hide sensitive headers
    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;
    
    # Logging configuration with security focus
    log_format security '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '"$http_x_forwarded_for" "$http_x_real_ip" '
                       '"$request_time" "$upstream_response_time" '
                       '"$ssl_protocol" "$ssl_cipher"';
    
    access_log /var/log/nginx/access.log security;
    
    # Gzip compression with security considerations
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/atom+xml
        image/svg+xml;
    
    # Security: Disable gzip for IE6 and below
    gzip_disable "msie6";
    
    # Rate limiting zones (DDoS protection)
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=30r/s;
    limit_req_zone $http_x_forwarded_for zone=global_limit:10m rate=100r/s;
    
    # Connection limiting (resource exhaustion protection)
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_zone $server_name zone=conn_limit_per_server:10m;
    
    # Security: Block common exploit patterns
    map $args $block_common_exploits {
        default 0;
        "~*(\<|%3C).*script.*(\>|%3E)" 1;
        "~*UNION.*SELECT" 1;
        "~*\.\./\.\." 1;
        "~*base64_" 1;
        "~*javascript:" 1;
        "~*(\<|%3C).*iframe.*(\>|%3E)" 1;
        "~*proc/self/environ" 1;
        "~*cmd.exe" 1;
        "~*/bin/bash" 1;
        "~*wget.*http" 1;
        "~*curl.*http" 1;
    }
    
    # Security: Block bad user agents
    map $http_user_agent $block_user_agents {
        default 0;
        "~*sqlmap" 1;
        "~*nikto" 1;
        "~*nessus" 1;
        "~*OpenVAS" 1;
        "~*w3af" 1;
        "~*dirbuster" 1;
        "~*nmap" 1;
        "~*masscan" 1;
        "~*python-requests" 1;
        "~*curl" 1;
        "~*wget" 1;
        "~*gobuster" 1;
        "~*dirb" 1;
        "~*wpscan" 1;
    }
    
    # Security: Block suspicious request methods
    map $request_method $block_method {
        default 0;
        "~*TRACE" 1;
        "~*TRACK" 1;
        "~*DEBUG" 1;
        "~*CONNECT" 1;
    }
    
    # SSL/TLS Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Upstream configurations with health checks
    upstream mev_backend {
        least_conn;
        server mev-shield-core:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    upstream admin_dashboard {
        least_conn;
        server admin-dashboard:3001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream user_dashboard {
        least_conn;
        server user-dashboard:3002 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # Security: Geo-blocking (example - adjust based on requirements)
    geo $blocked_country {
        default 0;
        # Add country blocks if needed
        # CN 1;  # Block China (example)
        # RU 1;  # Block Russia (example)
    }
    
    # HTTP to HTTPS redirect server
    server {
        listen 80;
        server_name _;
        
        # Security headers even for redirects
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # Allow Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # Main HTTPS server block
    server {
        listen 443 ssl http2;
        server_name mev-shield.local mev-shield.aurex.in;
        
        # SSL Certificate configuration
        ssl_certificate /etc/nginx/ssl/mev-shield.crt;
        ssl_certificate_key /etc/nginx/ssl/mev-shield.key;
        ssl_trusted_certificate /etc/nginx/ssl/mev-shield-chain.crt;
        
        # Security: Connection and request limiting
        limit_conn conn_limit_per_ip 10;
        limit_conn conn_limit_per_server 1000;
        
        # Security: Block based on maps
        if ($block_common_exploits) { return 444; }
        if ($block_user_agents) { return 444; }
        if ($block_method) { return 405; }
        if ($blocked_country) { return 444; }
        
        # Security: Additional headers for HTTPS
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Enhanced CSP for production
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'sha256-xyz123' 'unsafe-inline'; style-src 'self' 'unsafe-inline' fonts.googleapis.com; img-src 'self' data: https:; font-src 'self' fonts.gstatic.com; connect-src 'self' wss: https: ws:; frame-src 'none'; object-src 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests" always;
        
        # Root location (User Dashboard)
        location / {
            limit_req zone=general_limit burst=50 nodelay;
            
            # Security headers
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            
            proxy_pass http://user_dashboard/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Security: Hide upstream headers
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
            
            # Timeout configurations
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer configurations
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        # Admin Dashboard (restricted access)
        location /admin/ {
            limit_req zone=general_limit burst=20 nodelay;
            
            # IP whitelist for admin access (adjust as needed)
            # allow 10.0.0.0/8;
            # allow 172.16.0.0/12;
            # allow 192.168.0.0/16;
            # deny all;
            
            # Additional security headers for admin
            add_header X-Robots-Tag "noindex, nofollow, noarchive, nosnippet" always;
            
            proxy_pass http://admin_dashboard/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Admin-specific timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # API endpoints with enhanced security
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            # API-specific headers
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            
            # CORS (will be further restricted in backend)
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 1728000 always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            
            proxy_pass http://mev_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # API timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Authentication endpoints with strict rate limiting
        location /auth/ {
            limit_req zone=login_limit burst=5 nodelay;
            
            # Additional security for auth endpoints
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            
            proxy_pass http://mev_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Strict timeouts for auth
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # WebSocket endpoints with security
        location /ws/ {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://mev_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
        
        # Health check endpoint (unrestricted)
        location /health {
            access_log off;
            limit_req zone=general_limit burst=10 nodelay;
            
            proxy_pass http://mev_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Quick health check timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # Metrics endpoint (restricted access)
        location /metrics {
            # Restrict to internal networks and monitoring systems
            allow 172.20.0.0/16;  # Docker network
            allow 127.0.0.1;      # Localhost
            allow 10.0.0.0/8;     # Internal networks
            deny all;
            
            access_log off;
            
            proxy_pass http://mev_backend/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Monitoring timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Static assets with caching and security
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            limit_req zone=general_limit burst=100 nodelay;
            
            # Caching headers for static assets
            expires 1y;
            add_header Cache-Control "public, immutable" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # Security: Prevent execution of scripts
            location ~* \.(?:php|pl|py|cgi|sh|rb)$ {
                deny all;
            }
            
            proxy_pass http://user_dashboard;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;
        }
        
        # Security: Block access to sensitive files
        location ~* \.(htaccess|htpasswd|ini|log|sql|bak|backup|old|tmp|temp|config|conf|env)$ {
            deny all;
            return 444;
        }
        
        # Security: Block access to hidden files
        location ~ /\. {
            deny all;
            return 444;
        }
        
        # Security: Block access to backup files
        location ~* ~$ {
            deny all;
            return 444;
        }
        
        # Custom error pages
        error_page 400 401 402 403 404 /errors/4xx.html;
        error_page 500 501 502 503 504 /errors/5xx.html;
        
        location ^~ /errors/ {
            internal;
            root /var/www/error-pages;
        }
    }
    
    # Security monitoring and logging server (internal only)
    server {
        listen 127.0.0.1:8081;
        server_name security-monitor;
        
        # Security logs endpoint
        location /security-logs {
            allow 127.0.0.1;
            deny all;
            
            root /var/log/nginx;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }
        
        # Nginx status for monitoring
        location /nginx-status {
            allow 127.0.0.1;
            deny all;
            
            stub_status on;
            access_log off;
        }
    }
}

# Security: Stream configuration for load balancing and DDoS protection
stream {
    # Rate limiting for TCP connections
    limit_conn_zone $binary_remote_addr zone=stream_conn:10m;
    
    # Logging for stream connections
    log_format stream_security '$remote_addr [$time_local] '
                              '$protocol $status $bytes_sent $bytes_received '
                              '$session_time "$upstream_addr" '
                              '"$upstream_bytes_sent" "$upstream_bytes_received"';
    
    access_log /var/log/nginx/stream.log stream_security;
    
    # Example TCP load balancer (if needed for direct connections)
    upstream mev_tcp_backend {
        server mev-shield-core:8080 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 8443;
        proxy_pass mev_tcp_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/tcp.log;
        
        # Connection limiting
        limit_conn stream_conn 10;
    }
}