version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mev-shield-postgres
    environment:
      POSTGRES_DB: mev_shield
      POSTGRES_USER: mev_user
      POSTGRES_PASSWORD: mev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - mev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mev_user -d mev_shield"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: mev-shield-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MEV Shield Core Service
  mev-shield-core:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mev-shield-core
    environment:
      - DATABASE_URL=postgresql://mev_user:mev_password@postgres:5432/mev_shield
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=debug
      - MEV_SHIELD_ENV=local
    ports:
      - "8080:8080"
      - "9090:9090"
    volumes:
      - ./config.toml:/app/config.toml:ro
      - ./logs:/app/logs
    networks:
      - mev-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Admin Dashboard
  admin-dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile.admin
    container_name: mev-shield-admin
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_ENV=local
      - PORT=3001
    ports:
      - "3001:3001"
    networks:
      - mev-network
    depends_on:
      - mev-shield-core
    volumes:
      - ./dashboard/src:/app/src:ro
      - ./dashboard/public:/app/public:ro
    command: npm start
    restart: unless-stopped

  # User Dashboard
  user-dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile.user
    container_name: mev-shield-user
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_ENV=local
      - PORT=3002
    ports:
      - "3002:3002"
    networks:
      - mev-network
    depends_on:
      - mev-shield-core
    volumes:
      - ./dashboard/src:/app/src:ro
      - ./dashboard/public:/app/public:ro
    command: npm start
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: mev-shield-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - mev-network
    depends_on:
      - mev-shield-core
      - admin-dashboard
      - user-dashboard
    restart: unless-stopped

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: mev-shield-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - mev-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: mev-shield-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning:ro
    networks:
      - mev-network
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  mev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  nginx_logs: