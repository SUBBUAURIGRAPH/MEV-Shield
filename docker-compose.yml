# MEV Shield Docker Configuration
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: mevshield-postgres
    environment:
      POSTGRES_DB: mevshield
      POSTGRES_USER: mevshield
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mevshield123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - mevshield-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mevshield"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mevshield-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mevshield-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MEV Shield Core Service
  mevshield:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mevshield-core
    environment:
      DATABASE_URL: postgresql://mevshield:${POSTGRES_PASSWORD:-mevshield123}@postgres:5432/mevshield
      REDIS_URL: redis://redis:6379
      RUST_LOG: ${RUST_LOG:-info}
    ports:
      - "8080:8080"  # API port
      - "9090:9090"  # Metrics port
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./config.toml:/app/config.toml:ro
    networks:
      - mevshield-network
    restart: unless-stopped

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: mevshield-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9091:9090"
    networks:
      - mevshield-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: mevshield-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_INSTALL_PLUGINS: redis-datasource
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - mevshield-network
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  mevshield-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
